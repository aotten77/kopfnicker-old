1. git remote add describer-core_remote https://github.com/describerjs/describer-core.git

2. git fetch describer-core_remote

3. git checkout -b subtree/describer-core/master describer-core_remote/master

4. git checkout master

//  wenn noch kein js/describer-core existiert, werden die datein mit folgenden git-befehl vom subtree/describer-core/master in den js/describer-core geholt.

5.a git read-tree --prefix=js/describer-core -u subtree/describer-core/master (nur initial, wenn der ordner js/describer-core noch nicht existiert. sonst schritt 7)

//  ist der Ordner schon existent, werden die Datein im js/describer-core mit folgendem git-befehl aktualisiert.
5.b git merge --squash -s subtree --no-commit subtree/describer-core/master

6. git checkout master

// wenn im repo describer-core Änderungen durchgeführt wurden, können sie mit dem folgenden git-befehl geholt werden.
8. git checkout subtree/describer-core/master
9. git pull

// die Änderungen können jetzt wieder mit schirtt 5.b in den master gemergt werden. (zuvor bitte erst wieder in den master auschecken schritt 4)

// wenn man Änderungen im master unter /js/describer-core durchgeführt hat, sind diese mit fogenden git-befehl in den branch subtree/describer-core/master vom repo describer-core zu mergen. (Hierzu muss man den branch subtree/describer-core/master ausgecheckt haben)

git checkout subtree/describer-core/master

git merge --squash -s subtree --no-commit master



// ende








git diff-tree -p declareIt-localStorage_branch


Man kann aber auch genau das Gegenteil machen: Man führt Änderungen im Unterverzeichnis declareIt-localStorage des Branches master aus und mergt diese dann später in den Zweig declareIt-localStorage_branch.

