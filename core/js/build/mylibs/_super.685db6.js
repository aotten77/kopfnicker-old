define(["jquery","_config","utils.jquery_helpers","utils.helpers"],function($,_config){"use strict";return{config:function(){this.myPos=this.pos,this.myJmName=this.jmname,this.myJmNamePos=$.inArray(this.myJmName,this.$elem.data("jmname").split("|")),this.waited=!1,this.$elem.addClass("JSINIT-"+this.myJmName+"-EL-"+this.name)},click:function(){this.includes("event","click")&&this.isCondition()&&this._exec()},change:function(){this.includes("event","change")&&this.isCondition()&&this._exec()},jmtrigger:function(){this.includes("event","jmtrigger")&&this.isCondition()&&this._exec()},dominit:function(){this.includes("event","dominit")&&this.isCondition()&&this._exec(),this.includes("event","raf")&&this._raf(),this.partOf("event","interval")&&this._interval(),this.includes("event","blur")&&this.$elem.on("blur",this._blur.bind(this)),this.includes("event","focus")&&this.$elem.on("focus",this._focus.bind(this)),this.includes("event","hover")&&this.$elem.on("mouseover",this._hover.bind(this)),this.partOf("event","keyup")&&this.$elem.on("keyup",this._keyup.bind(this))},_raf:function(){this.conditionSource=this.isCondition("source"),this.rAFRender=window.requestAnimationFrame(this.render.bind(this))},_interval:function(){var a=this;setInterval(function(){a.isCondition()&&a._exec()},parseInt(this.getPartOf("event","interval").split("interval-")[1],10))},is:function(p_dataAttr,p_value,p_now){var _returnString;if("undefined"===$.type(p_dataAttr))return void jmHF.error("es wurde kein Parameter übergeben");if(this.configObj=this._getConfigObjArray(p_now),"undefined"===$.type(this.configObj[p_dataAttr]))return"";if("undefined"!==$.type(p_value))return this.configObj[p_dataAttr]===p_value;switch(_returnString=this.configObj[p_dataAttr],p_dataAttr){case"relatedTo":case"scrollTo":case"data":case"additionalloadertarget":return-1!==this.configObj[p_dataAttr].indexOf("this.")?eval(_returnString):_returnString;default:return _returnString}},isNow:function(a,b){this.is(a,b,!0)},isCondition:function(p_value,p_now){return this.configObj=this._getConfigObjArray(p_now),"undefined"!==$.type(p_value)&&"source"===p_value?"undefined"!==$.type(this.configObj.condition)&&this.configObj.condition:"undefined"!==$.type(this.configObj.condition)?eval(this.configObj.condition):!0},includes:function(a,b,c){return this.configObj=this._getConfigObjArray(c),"undefined"!==$.type(this.configObj[a])&&-1!==$.inArray(b,this.configObj[a].split("|"))},includesNow:function(a,b){this.contains(a,b,!0)},partOf:function(a,b,c){return this.configObj=this._getConfigObjArray(c),"undefined"!==$.type(this.configObj[a])&&-1!==$.inArray(!0,$.map(this.configObj[a].split("|"),function(a){return a.indexOf(b)>-1}))},partOfNow:function(a,b){this.partOf(a,b,!0)},getPartOf:function(a,b,c){var d;return this.configObj=this._getConfigObjArray(c),"undefined"!==$.type(this.configObj[a])?(d=$.map(this.configObj[a].split("|"),function(a){return a.indexOf(b)>-1?a:void 0})[0],d||""):void 0},_getConfigObjArray:function(a){return"undefined"!==$.type(this.initConfigObj)&&"undefined"===$.type(a)?this.initConfigObj:this.initConfigObj="undefined"===$.type(this.$elem.data("jmconfig"))?this.staticObj||this._getStaticConfigObj():$.extend({},this.staticObj||this._getStaticConfigObj(),this._getObjFromDom(a))},_getObjFromDom:function(a){var b,c,d=this,e=!0;if("undefined"===$.type(a)&&"undefined"!==$.type(this.staticObjFromDom))return this.staticObjFromDom;if(b="string"!==$.type(this.$elem.data("jmconfig"))?this.$elem.data("jmconfig"):JSON.parse(this.$elem.data("jmconfig").replace(/'/g,'"')),"object"===$.type(b)){if($.each(b,function(a,b){if(a===d.myJmName){if("object"===$.type(b)){if(window.debug){for(var f=0,g=_config.length;g>f;f++)if(_config[f].jmname===d.myJmName){if("array"!==$.type(_config[f].jmconfig)){c=1;break}c=_config[f].jmconfig.length;break}c>d.myPos+1&&$.doTimeout("_getObjFromDom1",200,function(){jmHF.warn('Die Anzahl der Objekt im Array-String für data-jmname="'+d.myJmName+'" weichen von der Anzahl der Objekte im entsprechenden jmconfig der _config.js ab!!! \n\n-> Wenn Objekte in der _config.js nicht überschrieben werden sollen, sind an den entsprechenden Positionen im data-jmconfig-Attribut lehre Objekte "{}" anzugeben.'),console.warn("%cELEMENT","color: orange; font-style: italic"),console.log(d.$elem[0])})}return e=!1,d.staticObjFromDom=b,!1}if("array"===$.type(b))return window.debug&&"undefined"===$.type(b[d.myPos])&&$.doTimeout("_getObjFromDom2",200,function(){jmHF.warn('Die Anzahl der Objekt im Array-String für data-jmname="'+d.myJmName+'" weichen von der Anzahl der Objekte im entsprechenden jmconfig der _config.js ab!!! \n\n-> Wenn Objekte in der _config.js nicht überschrieben werden sollen, sind an den entsprechenden Positionen im data-jmconfig-Attribut lehre Objekte "{}" anzugeben. \n\n -> Soll '+d.myJmName+" nicht überschrieben werden ist das entsprechende key-Value-Pair in data-jmconfig-Attribut zu entfernen."),console.warn("%cELEMENT","color: orange; font-style: italic"),console.log(d.$elem[0])}),e=!1,d.staticObjFromDom=b[d.myPos],!1}}),e){if(window.debug){for(var f=0,g=_config.length;g>f;f++)if(_config[f].jmname===d.myJmName){if("array"!==$.type(_config[f].jmconfig)){c=1;break}c=_config[f].jmconfig.length;break}c>d.myPos+1&&"undefined"===$.type(b[this.myPos])&&$.doTimeout("_getObjFromDom3",200,function(){jmHF.warn('Für data-jmname="'+d.myJmName+'" ist nur ein Objekt angegeben. Dieses weichen von der Anzahl der Objekte im entsprechenden jmconfig der _config.js ab!!! \n\n-> Wrappen sie das Objekt bitte in ein Array und füllen sie das Array (für die nicht zu überschreibenden Objekte in der _config.js) mit leheren Objekten auf.'),console.warn("%cELEMENT","color: orange; font-style: italic"),console.log(d.$elem[0])})}d.staticObjFromDom=b}return d.staticObjFromDom}return"array"===$.type(b)?(window.debug&&"undefined"===$.type(b[this.myPos])&&$.doTimeout("_getObjFromDom4",200,function(){jmHF.warn('Die Anzahl der Objekt im Array-String für data-jmname="'+d.myJmName+'" weichen von der Anzahl der Objekte im entsprechenden jmconfig der _config.js ab!!! \n\n-> Wenn Objekte in der _config.js nicht überschrieben werden sollen, sind an den entsprechenden Positionen im data-jmconfig-Attribut lehre Objekte "{}" anzugeben.'),console.warn("%cELEMENT","color: orange; font-style: italic"),console.log(d.$elem[0])}),d.staticObjFromDom=b[this.myPos]):d.staticObjFromDom},_getStaticConfigObj:function(){for(var a=0,b=_config.length;b>a;a++)if(_config[a].jmname===this.myJmName){if("array"!==$.type(_config[a].jmconfig)){this.staticObj=_config[a].jmconfig;break}this.staticObj=_config[a].jmconfig[this.myPos];break}return this.staticObj},_hover:function(){this.isCondition()&&this._exec()},_blur:function(){this.isCondition()&&this._exec()},_focus:function(){this.isCondition()&&this._exec()},_keyup:function(){this.isCondition()&&("number"===$.type(parseInt(this.getPartOf("event","keyup").split("delay-")[1],10))?$.doTimeout("JSINIT-"+this.myJmName+"-el-"+this.name,parseInt(this.getPartOf("event","keyup").split("delay-")[1],10),this._exec.bind(this)):this._exec.bind(this))},_scrollTo:function(){$(this.is("scrollTo")).scrollToMe(""!==this.is("scrollToOffset")?parseInt(this.is("scrollToOffset"),10):0)}}});