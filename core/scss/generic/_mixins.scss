/*------------------------------------*\
	$MIXINS
\*------------------------------------*/

/**
 * CLEARFIX............................clearfix
 * PSEUDO-ELEMENTS.....................Pseudo-Elements :after/:before
 * .....pdeuso-element-default (provides default setup for most :after/:before pseudo elements)
 * .....pdeuso-element-stretch (fits pseudo-element to parent size)
 * ELEMENT-STRETCH.....................Stretch element to parent size
 * RWD.................................Hide/Show something on Mobile/Tablet/Desktop
 * .....hide-on-desktop
 * .....hide-on-tablet
 * .....hide-on-mobile
 * .....show-on-mobile
 * BACKFACE-VISIBILITY.................Set the backface-visibility (default: hidden)
 * HEX-TO-RGB..........................RGBA Fallback -> http://codepen.io/sturobson/pen/hdKyv
 * ALIGNING............................Alignment of elements
 * .....vertical-align (Align things vertically (http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/))
 * .....centered (Absolute center position)
 * BORDER-RADIUS.......................For compatibility with Android devices
 * RETINA-IMAGES.......................Image-2x
 * TRANSFORM...........................Set Transform Prefixes
 * TRANSITIONS.........................Set Transition Prefixes
 * VISIBILTY...........................Element is visible or hidden
 * ABSOLUTE-POSITION...................Elements absolute position
 * MOVE/CHANGE-3D-POSITION.............Transform Elements position
 * USER-SELECT.........................Disable User Text Selection
 * ELEMENT-DEFAULTS....................Default Element properties
**/





/*------------------------------------*\
	$CLEARFIX
\*------------------------------------*/

@mixin clearfix {
	*zoom: 1;

	&:after,
	&:before {
		content: "\0020";
		display: table;
	}

	&:after {
		clear: both;
	}
}

.clearfix {
	@include clearfix;
}





/*------------------------------------*\
	$PSEUDO-ELEMENTS
\*------------------------------------*/

@mixin pseudo-element-default {
	content: "";
	display: block;
	position: absolute;
}

@mixin pseudo-element-stretch {
	@include pseudo-element-default;
	bottom: 0;
	left: 0;
	right: 0;
	top: 0;
}





/*------------------------------------*\
	$ELEMENT-STRETCH
\*------------------------------------*/

@mixin element-stretch {
	bottom: 0;
	left: 0;
	position: absolute;
	right: 0;
	top: 0;
}





/*------------------------------------*\
	$RWD
\*------------------------------------*/

@mixin hide-on-desktop {
	@media screen and (min-width: $bp-large) {
		display: none;
	}
}

@mixin hide-on-tablet {
	@media screen and (max-width: $bp-large) {
		display: none;
	}
}

@mixin hide-on-mobile {
	@media screen and (max-width: $bp-med) {
		display: none;
	}
}

@mixin show-on-mobile {
	@media screen and (min-width: $bp-med) {
		display: none;
	}
}





/*------------------------------------*\
	$BACKFACE-VISIBILITY
\*------------------------------------*/

@mixin backface-visibility($visibility: hidden) {
	-moz-backface-visibility:		$visibility;
	-ms-backface-visibility:		$visibility;
	-webkit-backface-visibility:	$visibility;
}





/*------------------------------------*\
	$HEX-TO-RGB
\*------------------------------------*/

@mixin rgba($color, $value) {
	background-color: $color;
	background-color: rgba($color, $value);
}





/*------------------------------------*\
	$ALIGNING
\*------------------------------------*/

@mixin vertical-align($position: relative) {
	@include transform(translateY(-50%));
	position: $position;
	top: 50%;
}

@mixin centered($position: relative) {
	@include move(-50%, -50%);
	left: 50%;
	top: 50%;
}





/*------------------------------------*\
	$BORDER-RADIUS
\*------------------------------------*/

@mixin border-radius($amount) {
	@include border-top-left-radius($amount);
	@include border-bottom-left-radius($amount);
	@include border-top-right-radius($amount);
	@include border-bottom-right-radius($amount);
}





/*------------------------------------*\
	$RETINA-IMAGES
\*------------------------------------*/
/**
 * Send path, image name, and width and height.
 * Name retina images [name]2x.
 * On retina, use image that's scaled by 2
**/

@mixin image-2x($image, $width, $height) {
	@media	(min--moz-device-pixel-ratio: 1.3),
			(-o-min-device-pixel-ratio: 2.6/2),
			(-webkit-min-device-pixel-ratio: 1.3),
			(min-device-pixel-ratio: 1.3),
			(min-resolution: 1.3dppx) {
				background-image: url($image);
				background-size: $width $height;
	}
}





/*------------------------------------*\
	$TRANSFORMS
\*------------------------------------*/

@mixin transform($transform) {
	-moz-transform:		$transform;
	-ms-transform:		$transform;
	-o-transform:		$transform;
	-webkit-transform:	$transform;
	transform:			$transform;
}





/*------------------------------------*\
	$TRANSITIONS
\*------------------------------------*/

@mixin transition($transition) {
	-moz-transition:	$transition;
	-ms-transition:		$transition;
	-o-transition:		$transition;
	-webkit-transition:	$transition;
	transition:			$transition;
}

@mixin transitions($transition, $transition) {
	-moz-transition:	$transition, $transition;
	-ms-transition:		$transition, $transition;
	-o-transition:		$transition, $transition;
	-webkit-transition:	$transition, $transition;
	transition:			$transition, $transition;
}

@mixin transform-transition($transition) {
	-moz-transition:	-moz-transform		$transition;
	-ms-transition:		-ms-transform		$transition;
	-o-transition:		-o-transform		$transition;
	-webkit-transition:	-webkit-transform	$transition;
	transition:			transform			$transition;
}





/*------------------------------------*\
    $VISIBILITY
\*------------------------------------*/

@mixin visibility($state) {
	@if $state == "hidden" {
		height: 0;
		opacity: 0;
		visibility: hidden;
	}

	@if $state == "visible" {
		height: auto;
		opacity: 1;
		visibility: visible;
	}
}





/*------------------------------------*\
	$ABSOLUTE-POSITION
\*------------------------------------*/

@mixin position($top: "", $right: "", $bottom: "", $left: "") {
	position: absolute;

	@if $top != "" {
		top: $top;
	}

	@if $right != "" {
		right: $right;
	}

	@if $bottom != "" {
		bottom: $bottom;
	}

	@if $left != "" {
		left: $left;
	}
}





/*------------------------------------*\
	$MOVE/CHANGE-3D-POSITION
\*------------------------------------*/

@mixin move($x: 0, $y: 0, $z: 0) {
	@include transform(translate3d($x, $y, $z));
	position: absolute;
}





/*------------------------------------*\
	$USER-SELECT
\*------------------------------------*/

@mixin user-select {
	-moz-user-select:		none;
	-ms-user-select:		none;
	-webkit-user-select:	none;
}





/*------------------------------------*\
	$ELEMENT-DEFAULTS
\*------------------------------------*/

@mixin element-default-spacing {
	margin-bottom: $default-spacing;
}

@mixin element-default-padding {
	@include element-default-padding-s;
	
	@media screen and (min-width: $bp-med) {
		@include element-default-padding-m;
	}

	@media screen and (min-width: $bp-large) {
		@include element-default-padding-l;
	}
}

@mixin element-default-padding-s {
	padding: $space-quarter ($dist + 3);
}

@mixin element-default-padding-m {
	padding: $space-quarter ($dist + 1);
}

@mixin element-default-padding-l {
	padding: $space-quarter $dist;
}





/*------------------------------------*\
	
\*------------------------------------*/