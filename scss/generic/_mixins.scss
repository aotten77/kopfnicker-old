/*------------------------------------*\
	$MIXINS
\*------------------------------------*/

/**
 * ALIGNING............................Alignment of elements
 * .....centered.......................Absolute center position
 * .....vertical-align.................Align things vertically (http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/))
 * BREAKPOINTS.........................Different Breakpoints
 * .....bp-xs
 * .....bp-s
 * .....bp-m
 * .....bp-l
 * .....bp-xl
 * .....bp-xxl
 * CLEARFIX............................clearfix
 * ELEMENT-DEFAULTS....................Default Element properties
 * .....element-default-spacing........Set Default Spacing Value to Elements
 * .....element-stretch................Stretch element to parent size
 * .....element-indent.................padding values for nested Elements, basically grid correction
 * .....indent.........................Left indention. Possible values: left, margin, padding (default)
 * FLEXBOX.............................Flex-Box default properties
 * LAYOUT..............................Page-Layout
 * .....constrained....................Constrained properties
 * MOVE/CHANGE-3D-POSITION.............Transform Elements position
 * POSITIONING.........................Elements position
 * .....absolute
 * .....fixed
 * .....relative
 * PSEUDO-ELEMENTS.....................Pseudo-Elements :after/:before
 * .....pdeuso-element-default.........Provides default setup for most :after/:before pseudo elements
 * .....pdeuso-element-stretch.........Fits pseudo-element to parent size
 * RETINA-IMAGES.......................Image-2x
 * RWD.................................Hide/Show something on Mobile/Tablet/Desktop
 * .....hide-on-desktop
 * .....hide-on-tablet
 * .....hide-on-mobile
 * .....show-on-mobile
 * VISIBILTY...........................Element is visible or hidden
**/





/*------------------------------------*\
	$ALIGNING
\*------------------------------------*/

@mixin centered($position: relative) {
	@include move(-50%, -50%);
	left: 50%;
	top: 50%;
}

@mixin vertical-align($position: relative) {
	position: $position;
	top: 50%;
	transform: translateY(-50%);
}





/*------------------------------------*\
	$BREAKPOINTS
\*------------------------------------*/

@mixin bp-xs {
	@media screen and (min-width: $bp-xs) {
		@content;
	}
}

@mixin bp-s {
	@media screen and (min-width: $bp-s) {
		@content;
	}
}

@mixin bp-m {
	@media screen and (min-width: $bp-m) {
		@content;
	}
}

@mixin bp-l {
	@media screen and (min-width: $bp-l) {
		@content;
	}
}

@mixin bp-xl {
	@media screen and (min-width: $bp-xl) {
		@content;
	}
}

@mixin bp-xxl {
	@media screen and (min-width: $bp-xxl) {
		@content;
	}
}





/*------------------------------------*\
	$CLEARFIX
\*------------------------------------*/

@mixin clearfix {
	*zoom: 1;

	&:after,
	&:before {
		content: "\0020";
		display: table;
	}

	&:after {
		clear: both;
	}
}





/*------------------------------------*\
	$ELEMENT-DEFAULTS
\*------------------------------------*/

// Default Spacing
@mixin element-default-spacing {
	margin-bottom: $default-element-spacing-s;

	@include bp-m {
		margin-bottom: $default-element-spacing-m;
	}

	@include bp-l {
		margin-bottom: $default-element-spacing-l;
	}
}

// Stretch element to parent size
@mixin element-stretch {
	@include position(absolute, 0, 0, 0, 0)
}

// Indent Elements
@mixin element-indent {
	padding: $default-spacing $dist-s;

	@include bp-m {
		padding: {
			left: $dist-m;
			right: $dist-m;
		}
	}

	@include bp-l {
		padding: {
			left: $dist-l;
			right: $dist-l;
		}
	}
}

// Single Indent
@mixin indent($arg: padding, $multiply: 1) {
	@if $arg == left {
		left: $dist-s * $multiply;

		@include bp-m {
			left: $dist-m * $multiply;
		}

		@include bp-l {
			left: $dist-l * $multiply;
		}
	}

	@if $arg == margin {
		margin-left: $dist-s * $multiply;

		@include bp-m {
			margin-left: $dist-m * $multiply;
		}

		@include bp-l {
			margin-left: $dist-l * $multiply;
		}
	}

	@if $arg == padding {
		padding-left: $dist-s * $multiply;

		@include bp-m {
			padding-left: $dist-m * $multiply;
		}

		@include bp-l {
			padding-left: $dist-l * $multiply;
		}
	}
}





/*------------------------------------*\
	$FLEXBOX
\*------------------------------------*/

@mixin flexbox($flow: row wrap) {
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-box;
	display: -webkit-flex;
	display: flex;
	flex-flow: $flow;
}

@mixin flexitem($grow: 1) {
	flex-grow: $grow;
}

@mixin flexcontent($flex: 1 100%) {
	flex: $flex;
}





/*------------------------------------*\
	$LAYOUT
\*------------------------------------*/

@mixin constrained {
	margin: 0 auto;
	max-width: $layout-maxwidth;
	width: 100%;
	z-index: 1;
}





/*------------------------------------*\
	$MOVE/CHANGE-3D-POSITION
\*------------------------------------*/

@mixin move($x: 0, $y: 0, $z: 0, $position: absolute) {
	position: $position;
	transform: translate3d($x, $y, $z);
}





/*------------------------------------*\
	$POSITIONING
\*------------------------------------*/

@mixin position($position, $top: "", $right: "", $bottom: "", $left: "") {
	position: $position;

	@if $bottom != "" {
		bottom: $bottom;
	}

	@if $left != "" {
		left: $left;
	}

	@if $right != "" {
		right: $right;
	}

	@if $top != "" {
		top: $top;
	}
}

@mixin absolute($top: "", $right: "", $bottom: "", $left: "") {
	@include position(absolute, $top, $right, $bottom, $left);
}

@mixin fixed($top: "", $right: "", $bottom: "", $left: "") {
	@include position(fixed, $top, $right, $bottom, $left);
}

@mixin relative($top: "", $right: "", $bottom: "", $left: "") {
	@include position(relative, $top, $right, $bottom, $left);
}





/*------------------------------------*\
	$PSEUDO_ELEMENT_DEFAULTS
\*------------------------------------*/

@mixin pseudo-element-default {
	content: "";
	display: block;
	position: absolute;
}

@mixin pseudo-before {
	&:before {
		@include pseudo-element-default;
		@content;
	}
}

@mixin-pseudo-after {
	&:after {
		@include pseudo-element-default;
		@content;
	}
}

@mixin pseudo-element-stretch {
	@include pseudo-element-default;
	bottom: 0;
	left: 0;
	right: 0;
	top: 0;
}





/*------------------------------------*\
	$RETINA-IMAGES
\*------------------------------------*/
/**
 * Send path, image name, and width and height.
 * Name retina images [name]2x.
 * On retina, use image that's scaled by 2
**/

@mixin image-2x($image, $width, $height) {
	@media	(min--moz-device-pixel-ratio: 1.3),
			(-o-min-device-pixel-ratio: 2.6/2),
			(-webkit-min-device-pixel-ratio: 1.3),
			(min-device-pixel-ratio: 1.3),
			(min-resolution: 1.3dppx) {
				background-image: url($image);
				background-size: $width $height;
	}
}





/*------------------------------------*\
	$RWD
\*------------------------------------*/

@mixin hide-on-desktop {
	@media screen and (min-width: $bp-l) {
		display: none;
	}
}

@mixin hide-on-tablet {
	@media screen and (max-width: $bp-l) {
		display: none;
	}
}

@mixin hide-on-mobile {
	@media screen and (max-width: $bp-m) {
		display: none;
	}
}

@mixin show-on-mobile {
	@media screen and (min-width: $bp-m) {
		display: none;
	}
}





/*------------------------------------*\
    $VISIBILITY
\*------------------------------------*/

@mixin visibility($state) {
	@if $state == "hidden" {
		height: 0;
		opacity: 0;
		visibility: hidden;
	}

	@if $state == "visible" {
		height: auto;
		opacity: 1;
		visibility: visible;
	}
}





/*------------------------------------*\
	
\*------------------------------------*/